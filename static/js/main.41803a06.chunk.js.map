{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","Button","Tabs","tabs","selectedTab","onClick","onClickHandler","useCallback","id","map","t","className","classNames","title","content","App","useState","setSelectedTab","onTabSelected","selected","find","ReactDOM","render","document","getElementById"],"mappings":"mOAWMA,EAAUC,YAAO,MAAPA,CAAH,sEAKPC,EAASD,YAAO,MAAPA,CAAH,sSAeCE,EAAwB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QACnDC,EAAiBC,uBAAY,SAACC,GAClCH,EAAQG,KACP,CAACH,IAEJ,OACE,gCACE,cAACN,EAAD,UACGI,EAAKM,KAAI,SAAAC,GAAC,OACT,cAACT,EAAD,CACEU,UAAWC,IAAW,GAAI,CACxB,YAAaF,EAAEF,KAAOJ,EAAYI,KAGpCH,QAAS,kBAAMC,EAAeI,EAAEF,KALlC,SAOGE,EAAEG,OAHEH,EAAEF,SAOb,qBAAK,UAAQ,cAAb,SACGJ,EAAYU,cChDRX,EAAO,CAClB,CAAEK,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,gBAsB3BC,EAnBO,WACpB,MAAsCC,mBAASb,EAAK,IAApD,mBAAOC,EAAP,KAAoBa,EAApB,KACMC,EAAgBX,uBAAY,SAACC,GACjC,IAAMW,EAAWhB,EAAKiB,MAAK,SAACV,GAAD,OAAOA,EAAEF,KAAOA,MAAOL,EAAK,GAEvDc,EAAeE,KACd,IAEH,OACE,sBAAKR,UAAU,MAAf,UACE,sDAEGP,EAAYI,MAEf,cAAC,EAAD,CAAML,KAAMA,EAAMC,YAAaA,EAAaC,QAASa,QCpB3DG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.41803a06.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport { styled } from '@mui/system';\nimport classNames from 'classnames';\nimport { Tab } from '../../types';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTab: Tab;\n  onClick: (id: string) => void;\n}\n\nconst Wrapper = styled('div')`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nconst Button = styled('div')`\n  height: 45px;\n  width: 100px;\n  text-align: center;\n  padding: 13px;\n  border-radius: 5px 5px 0 0;\n  transition: transform 0.8s, background-color 0.8s;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #b393d3;\n    transform: translateY(-3px);\n  }\n`;\n\nexport const Tabs: React.FC<Props> = ({ tabs, selectedTab, onClick }) => {\n  const onClickHandler = useCallback((id) => {\n    onClick(id);\n  }, [onClick]);\n\n  return (\n    <div>\n      <Wrapper>\n        {tabs.map(t => (\n          <Button\n            className={classNames('', {\n              'is-active': t.id === selectedTab.id,\n            })}\n            key={t.id}\n            onClick={() => onClickHandler(t.id)}\n          >\n            {t.title}\n          </Button>\n        ))}\n      </Wrapper>\n      <div data-cy=\"tab-content\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n  const onTabSelected = useCallback((id) => {\n    const selected = tabs.find((t) => t.id === id) || tabs[0];\n\n    setSelectedTab(selected);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>\n        Selected tab is:&nbsp;\n        {selectedTab.id}\n      </h1>\n      <Tabs tabs={tabs} selectedTab={selectedTab} onClick={onTabSelected} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}